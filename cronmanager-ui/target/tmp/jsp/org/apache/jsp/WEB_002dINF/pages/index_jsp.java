/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.2.8.v20150217
 * Generated at: 2016-04-11 09:51:10 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.pages;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("\t<title></title>\n");
      out.write("\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"/>\n");
      out.write("\t<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.12.0/jquery.min.js\"></script>\n");
      out.write("\t<script type=\"text/javascript\">\n");
      out.write(" \t\t\n");
      out.write("\t\t$(document).ready(function(){ \n");
      out.write("\t\t$.urlParam = function(name){\n");
      out.write("\t\t    var results = new RegExp('[\\?&]' + name + '=([^&#]*)').exec(window.location.href);\n");
      out.write("\t\t    if (results==null){\n");
      out.write("\t\t       return null;\n");
      out.write("\t\t    }\n");
      out.write("\t\t    else{\n");
      out.write("\t\t       return results[1] || 0;\n");
      out.write("\t\t    }\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tvar jobId=$.urlParam('id');\n");
      out.write("\t\t$.ajax({\n");
      out.write("\t\t\ttype : \"GET\",\n");
      out.write("\t\t\turl : \"/job/all\",\n");
      out.write("\t\t\tcrossDomain : true,\n");
      out.write("\t\t\tprocessData : true,\n");
      out.write("\t\t\tsuccess : function(jobs) \n");
      out.write("\t\t\t{\n");
      out.write("\t\t\t\tvar trHTML = '';\n");
      out.write("\t\t        $.each(jobs, function (i, item) {\n");
      out.write("\t\t            trHTML += '<tr><td>' + jobs[i].jobName + '</td><td>' + jobs[i].period + '</td><td>' + jobs[i].executableFilePath + '</td><td> </td><td><a href=\"/job-detail/?id='+jobs[i].id+'\" >Go</a></td></tr>';\n");
      out.write("\t\t        });\n");
      out.write("\t\t        $('#jobs-table').append(trHTML);\n");
      out.write("\t\t\t},\n");
      out.write("\t\t\terror : function(ex, ajaxOptions, thrownError) \n");
      out.write("\t\t\t{\n");
      out.write("\t\t\t\t \n");
      out.write("\t\t\t}\n");
      out.write("\t\t});\n");
      out.write("\t});\n");
      out.write("\t</script>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\t<div>\n");
      out.write("\t\t<div style=\"width: 100%; border: 1px silver solid; height: 40px;\">QUALIST Cron Job Manager Tool</div>\n");
      out.write("\t\t<div style=\"width: 100%; border: 1px silver solid; height: 500px;\">\n");
      out.write("\t\t\t<div style=\"float: left; width: 20%; border: 1px silver solid; height: 100%\"></div>\n");
      out.write("\t\t\t<div style=\"float: left; width: 70%;  height: 100%\">\n");
      out.write("\t\t\t\t<table style=\"width: 100%\" id=\"jobs-table\">\n");
      out.write("\t\t\t\t\t<thead>\n");
      out.write("\t\t\t\t\t\t<th>Job Adı</th>\n");
      out.write("\t\t\t\t\t\t<th>Çalışma Periyodu</th>\n");
      out.write("\t\t\t\t\t\t<th>Çalıştırılabilir Dosya</th>\n");
      out.write("\t\t\t\t\t\t<th>Son Çalışma Zamanı</th>\n");
      out.write("\t\t\t\t\t\t<th>Git</th>\n");
      out.write("\t\t\t\t\t</thead>\n");
      out.write("\t\t\t\t</table>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t</div>\n");
      out.write("\n");
      out.write("\t</div>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
